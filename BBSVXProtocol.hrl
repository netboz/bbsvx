%% Generated by the Erlang ASN.1 compiler. Version: 5.2.1
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition in module BBSVXProtocol.

-ifndef(_BBSVXPROTOCOL_HRL_).
-define(_BBSVXPROTOCOL_HRL_, true).

-record('NodeEntry', {
  nodeId = asn1_NOVALUE,
  host,
  port = asn1_DEFAULT
}).

-record('ExchangeEntry', {
  ulid,
  lock,
  target,
  newLock = asn1_NOVALUE
}).

-record('HeaderConnect', {
  version = asn1_DEFAULT,
  connectionType = asn1_NOVALUE,
  nodeId = asn1_NOVALUE,
  namespace
}).

-record('HeaderConnectAck', {
  result,
  nodeId
}).

-record('HeaderRegister', {
  namespace,
  ulid,
  lock
}).

-record('HeaderRegisterAck', {
  result,
  leader = asn1_NOVALUE,
  currentIndex = asn1_NOVALUE
}).

-record('HeaderJoin', {
  namespace,
  ulid,
  joinType,
  currentLock,
  newLock,
  options = asn1_NOVALUE
}).

-record('HeaderJoinAck', {
  result,
  joinType,
  options = asn1_NOVALUE
}).

-record('HeaderForwardJoin', {
  namespace,
  ulid,
  joinType,
  lock,
  options = asn1_NOVALUE
}).

-record('HeaderForwardJoinAck', {
  result,
  joinType
}).

-record('ExchangeIn', {
  proposedSample
}).

-record('ExchangeOut', {
  proposedSample
}).

-record('ExchangeAccept', {
}).

-record('ExchangeCancelled', {
  namespace,
  reason
}).

-record('NodeQuitting', {
  reason
}).

-record('ChangeLock', {
  newLock,
  currentLock
}).

-record('OntologyHistory', {
  namespace,
  oldestIndex,
  youngerIndex,
  transactions
}).

-record('OntologyHistoryRequest', {
  namespace,
  requester = asn1_NOVALUE,
  oldestIndex,
  youngerIndex
}).

-record('Transaction', {
  index = asn1_DEFAULT,
  type,
  signature,
  tsCreated = asn1_DEFAULT,
  tsPosted = asn1_DEFAULT,
  tsDelivered = asn1_DEFAULT,
  tsProcessed = asn1_NOVALUE,
  sourceOntologyId,
  prevAddress,
  prevHash,
  currentAddress,
  namespace,
  leader = asn1_NOVALUE,
  payload,
  diff,
  status = asn1_DEFAULT
}).

-record('EptoMessage', {
  payload
}).

-record('Neighbor', {
  nodeId,
  chosenLeader = asn1_NOVALUE,
  publicKey,
  signedTs,
  ts
}).

-record('LeaderElectionInfo', {
  payload
}).

-record('SendForwardSubscription', {
  subscriberNode,
  lock
}).

-record('OpenForwardJoin', {
  subscriberNode,
  lock
}).

-endif. %% _BBSVXPROTOCOL_HRL_
